"""
Django settings for step project.
Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

if not SECRET_KEY:
    # Fallback for PythonAnywhere console setup (you can set it in the Web Tab later)
    SECRET_KEY = 'your-development-secret-key-change-in-production'
    print("WARNING: SECRET_KEY not set. Using a default value for development.")

# SECURITY WARNING: don't run with debug turned on in production!
# On PythonAnywhere, you are in a production-like environment
DEBUG = False

# ALLOWED_HOSTS for PythonAnywhere
# Replace 'yourusername' with your actual PythonAnywhere username
YOUR_PYTHONANYWHERE_USERNAME = 'yourusername'  # <<< CHANGE THIS >>>
ALLOWED_HOSTS = [
    f'{YOUR_PYTHONANYWHERE_USERNAME}.pythonanywhere.com',
]

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'zero',  # your app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Removed whitenoise for PythonAnywhere (not needed for free tier)
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'step.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'step.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# PythonAnywhere free tier uses MySQL

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DB_NAME', f"{YOUR_PYTHONANYWHERE_USERNAME}$default"), # Usually yourusername$dbname
        'USER': os.environ.get('DB_USER', YOUR_PYTHONANYWHERE_USERNAME), # Usually your PythonAnywhere username
        'PASSWORD': os.environ.get('DB_PASSWORD', ''), # Your MySQL database password from PythonAnywhere
        'HOST': os.environ.get('DB_HOST', f'{YOUR_PYTHONANYWHERE_USERNAME}.mysql.pythonanywhere-services.com'),
        'PORT': '3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Removed Whitenoise storage setting
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Security settings for production (Simplified for PythonAnywhere)
# PythonAnywhere handles SSL at the proxy level, so we can relax these
SECURE_SSL_REDIRECT = False  # Let PythonAnywhere's proxy handle HTTPS
SESSION_COOKIE_SECURE = False  # Set to False if not using HTTPS at the app level
CSRF_COOKIE_SECURE = False    # Set to False if not using HTTPS at the app level
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Logging configuration (Very helpful for debugging on PythonAnywhere)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}